
plugins {
  id 'java'
  id 'idea'
  id 'eclipse'
  id 'maven-publish'
  id 'signing'
  id "com.jfrog.bintray" version "1.8.4"
  }
  
processResources {
  from('src/test/resources') { include '**/*.json' }
}

group = 'com.frogfront'
version = applicationVersion

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenLocal()
    mavenCentral()
    jcenter()
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
	archives jar
    archives sourcesJar
    archives javadocJar
}

bintray {
	user = System.getenv('BINTRAY_USER')
    key = System.getenv('BINTRAY_KEY')
    publications = ['WebCrawlerPub']
    override = true
    pkg {
        repo = 'com.frogfront'
        name = 'web-crawler'
        userOrg = 'frog-front'
        licenses = ['Apache-2.0']
        vcsUrl = scmWebsite
    }
}

publishing {
    publications {
        WebCrawlerPub(MavenPublication) {
            from components.java
            artifact sourcesJar
            artifact javadocJar
            version applicationVersion
			pom {
        		description = "Web Crawler Library (Domain BOT)"
				name = "Frog Front - Web Crawler"
				url = website
				
			    licenses {
			        license {
			            name = "The Apache Software License, Version 2.0"
			            url = "http://www.apache.org/licenses/LICENSE-2.0.txt"
			        }
			    }
			    developers {
			        developer {
			            id = "cuzz22000"
			            name = "chris w"
			            email = "info@frogfront.com"
			        }
			    }
			    issueManagement {
			    	system = "GitHub"
			    	url = scmWebsite + "/issues"
			    }
			    scm {
			       url = scmWebsite
			       tag = "head"
	    		}
            }
            
        }
    }
    repositories {
        maven {
            url "https://oss.sonatype.org/service/local/staging/deploy/maven2"
            credentials {
                username System.getenv('SONATYPE_USER')
                password System.getenv('SONATYPE_PWD')
            }
    	}
    }
}

if (new File(project.getProperty('signing.secretKeyRingFile')).exists()) {
	signing {
	    sign publishing.publications.WebCrawlerPub
	}
}


task copyPom(type: Copy) {
    from file("$buildDir/publications/WebCrawlerPub/pom-default.xml")
    into file("$projectDir")
    rename '(.+)-default(.+)', '$1$2'
}


dependencies {

	implementation 'com.google.guava:guava:24.0-jre'
	implementation 'com.github.crawler-commons:crawler-commons:1.0'
	implementation 'org.jsoup:jsoup:'+jsoupVersion

    testImplementation 'junit:junit:4.12'
    testImplementation 'ch.qos.logback:logback-classic:1.0.13'
    testImplementation 'org.mockito:mockito-core:2.15.0'
    testImplementation 'org.powermock:powermock-module-junit4:2.0.0'
    testImplementation 'org.powermock:powermock-api-mockito2:2.0.0'
    testImplementation 'org.powermock:powermock-core:2.0.0'
     
}

defaultTasks 'clean', 'build', 'publishToMavenLocal', 'copyPom'

